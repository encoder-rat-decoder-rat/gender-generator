{"version":3,"sources":["dataStore.js","visuals.js","downloadFrame.js","index.js"],"names":["baseCategories","categorySets","categorySort","a","b","length","sets","index","addNewCategory","label","size","newCategoryIndex","newCategory","addToSet","categorySet","concat","sort","Math","min","random","round","pairSets","map","multiSets","push","COLORS","svg","canvas","document","createElement","width","Number","getAttribute","height","ctx","getContext","image","Image","svgAsXML","XMLSerializer","serializeToString","Promise","resolve","onload","src","encodeURIComponent","drawImage","toBlob","blob","URL","createObjectURL","url","body","appendChild","setAttribute","click","remove","chart","VennDiagram","select","append","resizeChart","window","innerWidth","innerHeight","attr","node","parentNode","innerHTML","currentParams","setInterval","newParams","location","search","includes","downloadAsPNG","getElementById","on","filter","createGooeyFilter","vennWrapper","style","addOne","nodes","serializedCategories","serializeCategories","datum","call","selectAll","d","i","setTimeout"],"mappings":"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","file":"static/js/main.54db8077.chunk.js","sourcesContent":["export const baseCategories = [];\nexport const categorySets = [];\n\nexport function categorySort(a, b) {\n  // Sort in order of set length\n  const length = a.sets.length - b.sets.length;\n  if (length !== 0) {\n    return length;\n  }\n  // And if they're the same length,\n  // sort in order of the indexes in the sets\n  for (let index = 0; index < a.sets.length; index += 1) {\n    return a.sets[index] - b.sets[index];\n  }\n\n  return 0;\n}\n\n/**\n * Function to take our category stores and turn it into a format usable by D3\n */\nexport function serializeCategories() {\n  const serializedCategories = baseCategories.concat(categorySets);\n  serializedCategories.sort(categorySort);\n\n  // Only pass categories with overlaps\n  return serializedCategories.filter(({ size: setSize }) => setSize);\n}\n\n/**\n * Adds a new category to our list of categories and generates\n * intersections for each of the existing categories\n */\nexport function addNewCategory(label, size) {\n  const newCategoryIndex = baseCategories.length;\n  // Add itself to the base categories\n  const newCategory = {\n    sets: [newCategoryIndex],\n    label,\n    size,\n  };\n\n  const addToSet = (categorySet) => ({\n    // Sort the sets in place for ease of the serializer\n    sets: categorySet.sets.concat([newCategoryIndex]).sort(),\n    size:\n      // The size of the sets cannot be larger than either of the categories\n      Math.min(size, categorySet.size) *\n      // Randomize the size of the overlap\n      Math.random() *\n      0.6 *\n      // TODO: Figure out how often we want overlaps\n      // Math.round(Math.random() * X) basically says we get overlaps less than half the time\n      Math.round(Math.random() * 0.7),\n  });\n\n  // Now duplicate the existing pair sets\n  const pairSets = baseCategories.map(addToSet);\n  // Now duplicate the existing multi sets\n  const multiSets = categorySets.map(addToSet);\n\n  // Finally add the new category to the base categories\n  baseCategories.push(newCategory);\n  // And the new pari and multi sets\n  categorySets.push(...pairSets, ...multiSets);\n}\n","import { selectAll } from \"d3\";\n\n///////////////////////////////////////////////////////////////////////////\n///////////////////////////// Create filter ///////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\nexport function createGooeyFilter(svg) {\n  //SVG filter for the gooey effect\n  //Code taken from http://tympanus.net/codrops/2015/03/10/creative-gooey-effects/\n  var defs = svg.append(\"defs\");\n  var filter = defs.append(\"filter\").attr(\"id\", \"gooeyCodeFilter\");\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceGraphic\")\n    .attr(\"stdDeviation\", \"5\")\n    //to fix safari: http://stackoverflow.com/questions/24295043/svg-gaussian-blur-in-safari-unexpectedly-lightens-image\n    .attr(\"color-interpolation-filters\", \"sRGB\")\n    .attr(\"result\", \"blur\");\n  filter\n    .append(\"feColorMatrix\")\n    .attr(\"in\", \"blur\")\n    .attr(\"mode\", \"matrix\")\n    .attr(\"values\", \"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\")\n    .attr(\"result\", \"gooey\");\n  //If you want the end shapes to be exactly the same size as without the filter\n  //add the feComposite below. However this will result in a less beautiful gooey effect\n  //filter.append(\"feBlend\")\n  //  .attr(\"in\",\"SourceGraphic\")\n  //  .attr(\"in2\",\"gooey\");\n  //Instead of the feBlend, you can do feComposite. This will also place a sharp image on top\n  //But it will result in smaller circles\n  //filter.append(\"feComposite\") //feBlend\n  //  .attr(\"in\",\"SourceGraphic\")\n  //  .attr(\"in2\",\"gooey\")\n  //  .attr(\"operator\",\"atop\");\n}\n\n// temporary pastel scheme\nexport const COLORS = [\n  \"#fce9f1\",\n  \"#FEC8D8\",\n  \"#FFDFD3\",\n  \"#e9fcf4\",\n  \"#feece8\",\n  \"#e8fafe\",\n  \"#ece8fe\",\n  \"#efbbcf\",\n  \"#ffd5cd\",\n  \"#FFCCDD\",\n  \"#FFFFCC\",\n  \"#FFDDCC\",\n  \"#CCDDEE\",\n  \"#FFCCCC\",\n  \"#CCDDCC\",\n  \"#CCFFCC\",\n  \"#FFEEFF\",\n  \"#CCCCFF\",\n  \"#CAEEFE\",\n  \"#FFFCE7\",\n  \"E1FFD4\",\n  \"#FCE1F8\",\n  \"DACBFE\",\n];\n\nexport function colorCircles(wrapper) {\n  selectAll(\".venn-circle path\")\n    .style(\"fill-opacity\", 0.5)\n    .style(\"fill\", function (d, i) {\n      return COLORS[i];\n    });\n\n  // Hide those labels, for now\n  selectAll(\".venn-circle .label\").style(\"display\", \"none\");\n}\n","/**\n * Downloads the passed SVG node as a png.\n *\n * @param      {Node}   svg     The svg\n * @return     {Promise}  { description_of_the_return_value }\n */\nexport async function downloadAsPNG(svg) {\n  // First generate a canvas the size of the svg\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = Number(svg.getAttribute(\"width\"));\n  canvas.height = Number(svg.getAttribute(\"height\"));\n  const ctx = canvas.getContext(\"2d\");\n\n  var image = new Image();\n  const svgAsXML = new XMLSerializer().serializeToString(svg);\n\n  await new Promise((resolve) => {\n    image.onload = resolve;\n    image.src = \"data:image/svg+xml,\" + encodeURIComponent(svgAsXML);\n  });\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n  const url = await new Promise((resolve) => {\n    // toBlob(callback, mimeType, qualityArgument);\n    canvas.toBlob(function (blob) {\n      resolve(URL.createObjectURL(blob));\n    }, \"image/png\");\n  });\n\n  var a = document.createElement(\"a\");\n  document.body.appendChild(a); // This line makes it work in Firefox.\n  a.setAttribute(\"download\", \"image.jpg\");\n  a.setAttribute(\"href\", url);\n  a.setAttribute(\"target\", \"_blank\");\n  a.click();\n  // We don't need it anymore, remove it\n  a.remove();\n}\n","import \"./index.css\";\n\nimport {\n  // easeLinear,\n  // forceCenter,\n  // forceCollide,\n  // forceManyBody,\n  // forceSimulation,\n  // range,\n  select,\n  // timer\n} from \"d3\";\n\nimport { VennDiagram } from \"venn.js\";\n\nimport { serializeCategories, addNewCategory } from \"./dataStore.js\";\n\nimport { createGooeyFilter, colorCircles } from \"./visuals.js\";\nimport { downloadAsPNG } from \"./downloadFrame.js\";\n\n///////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n/////////////////////////////// Reference ////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n// http://bl.ocks.org/nbremer/0e98c72b043590769facc5e829ebf43f\n// http://bl.ocks.org/syntagmatic/6a921aed54be2a2bea5e56cf2157768b\n// https://www.visualcinnamon.com/2016/06/fun-data-visualizations-svg-gooey-effect\n\n///////////////////////////////////////////////////////////////////////////\n/////////////////////////////// Set-up ////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\n// Generate the Chart\nconst chart = VennDiagram();\n\n// Create the SVG that houses the chart\nconst svg = select(\"body\").append(\"svg\");\n\n// And add attributes so it can be downloaded\n// eslint-disable-next-line no-unused-expressions\nsvg\n  .attr(\"version\", 1.1)\n  .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n  .attr(\"id\", \"chartWrapper\")\n  .attr(\"style\", \"background-color: #acd;\")\n  .node().parentNode.innerHTML;\n\n/**\n * redraws on resize to fit browser window\n */\nfunction resizeChart() {\n  const width = window.innerWidth;\n  const height = window.innerHeight;\n  svg.attr(\"width\", width).attr(\"height\", height);\n  chart.width(width).height(height);\n}\n\n// Set an interval loop to check if the ?frame query param is added to the url\nlet currentParams = null;\nconst checkFrame = () => {\n  const newParams = window.location.search;\n  if (currentParams !== newParams && newParams.includes(\"?frame\")) {\n    downloadAsPNG(document.getElementById(\"chartWrapper\"));\n  }\n  currentParams = newParams;\n};\nwindow.setInterval(checkFrame, 2000);\n\nresizeChart();\nselect(window).on(\"resize\", resizeChart);\n\n///////////////////////////////////////////////////////////////////////////\n///////////////////////////// Create filter ///////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\ncreateGooeyFilter(svg);\n\n///////////////////////////////////////////////////////////////////////////\n///////////////////////////// Create circles //////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n// The wrapper for all of the circles\nconst vennWrapper = svg\n  .append(\"g\")\n  .attr(\"class\", \"vennWrapper\")\n  .attr(\"id\", \"vennWrapper\")\n  .style(\"filter\", \"url(#gooeyCodeFilter)\");\n\n///////////////////////////////////////////////////////////////////////////\n/////////////////////////////// Functions /////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * This updates our data and recalls the colorizing function\n */\n\nfunction updateData() {\n  // Fetch our data\n  const nodes = serializeCategories();\n  vennWrapper.datum(nodes).call(chart);\n\n  // Update all of the colors\n  colorCircles();\n}\n\n/**\n * A setInterval loop to update our page every second\n */\n\nwindow.setInterval(updateData, 2000);\n\n/**\n * Add a random circle\n *\n * @param      {Number}  [size=Math.random()*14+8]  The size\n */\nfunction addOne(size = Math.random() * 14 + 8) {\n  addNewCategory(\"\", size);\n}\n\n// Add a new category every 2.5 seconds up to 10\nfor (let i = 0; i < 10; i += 1) {\n  window.setTimeout(addOne, 5000 * i);\n}\n"],"sourceRoot":""}