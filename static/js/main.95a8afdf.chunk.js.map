{"version":3,"sources":["index.js"],"names":["theta","Math","PI","nodes","range","map","radius","random","root","fixed","forceSimulation","force","forceManyBody","strength","forceCenter","width","height","forceCollide","d","on","u","select","selectAll","data","enter","append","merge","attr","x","y","exit","remove","goRound","svg","filter","xScale","scaleLinear","domain","circleWrapper","style","colors","flyCircleData","i","push","fixedAngle","randomAngle","speed","r","floor","color","length","transition","duration","ease","easeLinear","attrTween","interpolateString","call","delay","sin","cos","sqrt","angle"],"mappings":"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","file":"static/js/main.95a8afdf.chunk.js","sourcesContent":["import {\n  easeLinear,\n  forceCenter,\n  forceCollide,\n  forceManyBody,\n  forceSimulation,\n  interpolateString,\n  range,\n  scaleLinear,\n  select,\n} from \"d3\";\n\n///////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n/////////////////////////////// Reference ////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n// http://bl.ocks.org/nbremer/0e98c72b043590769facc5e829ebf43f\n// http://bl.ocks.org/syntagmatic/6a921aed54be2a2bea5e56cf2157768b\n// https://www.visualcinnamon.com/2016/06/fun-data-visualizations-svg-gooey-effect\n\n///////////////////////////////////////////////////////////////////////////\n/////////////////////////////// Set-up ////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\nvar width = 960,\n  height = 500;\nvar spacing = 30;\nvar theta = Math.PI / 3;\n\n// nodes need to come from data i think\nvar nodes = range(150).map(function () {\n    return { radius: Math.random() * 14 + 8 };\n  }),\n  root = nodes[0];\n\nroot.radius = 0;\nroot.fixed = true;\n\nforceSimulation(nodes)\n  // .force('charge', forceManyBody().strength(-20))\n  // .force('charge', forceManyBody().strength(function(d, i) { return i ? 0 : -2000; }))\n  // gravity: how they overlap i think / forceManyBody\n\n  // forceManyBody: negative flies apart, positive sticks together\n  // how to alter this from time to time?\n  // setting this to 100 is fucking wild and it's good\n  .force(\"charge\", forceManyBody().strength(-60))\n  .force(\"center\", forceCenter(width / 2, height / 2))\n  .force(\n    \"collision\",\n    forceCollide().radius(function (d) {\n      return d.radius;\n    })\n  )\n  .on(\"tick\", update)\n  .on(\"end\", goRound);\n\nvar svg = select(\"body\")\n  .append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height);\n// .attr(\"transform\", \"translate(\" + (width/2) + \",\" + (height/2) + \")\");\n\n///////////////////////////////////////////////////////////////////////////\n///////////////////////////// Create filter ///////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\n//SVG filter for the gooey effect\n//Code taken from http://tympanus.net/codrops/2015/03/10/creative-gooey-effects/\nvar defs = svg.append(\"defs\");\nvar filter = defs.append(\"filter\").attr(\"id\", \"gooeyCodeFilter\");\nfilter\n  .append(\"feGaussianBlur\")\n  .attr(\"in\", \"SourceGraphic\")\n  .attr(\"stdDeviation\", \"10\")\n  //to fix safari: http://stackoverflow.com/questions/24295043/svg-gaussian-blur-in-safari-unexpectedly-lightens-image\n  .attr(\"color-interpolation-filters\", \"sRGB\")\n  .attr(\"result\", \"blur\");\nfilter\n  .append(\"feColorMatrix\")\n  .attr(\"in\", \"blur\")\n  .attr(\"mode\", \"matrix\")\n  .attr(\"values\", \"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\")\n  .attr(\"result\", \"gooey\");\n//If you want the end shapes to be exactly the same size as without the filter\n//add the feComposite below. However this will result in a less beautiful gooey effect\n//filter.append(\"feBlend\")\n//  .attr(\"in\",\"SourceGraphic\")\n//  .attr(\"in2\",\"gooey\");\n//Instead of the feBlend, you can do feComposite. This will also place a sharp image on top\n//But it will result in smaller circles\n//filter.append(\"feComposite\") //feBlend\n//  .attr(\"in\",\"SourceGraphic\")\n//  .attr(\"in2\",\"gooey\")\n//  .attr(\"operator\",\"atop\");\n\n///////////////////////////////////////////////////////////////////////////\n///////////////////////////// Create circles //////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n//Create scale\n// scales are for mapping, eg calc positions based on data\nvar xScale = scaleLinear()\n  .domain([-1.25, 1.25])\n  .range([-width / 2, width / 2]);\n\nvar circleWrapper = svg\n  .append(\"g\")\n  .attr(\"class\", \"circleWrapper\")\n  .style(\"filter\", \"url(#gooeyCodeFilter)\");\n\n//Create the circles that will move out and in the center circle\nvar steps = 20;\n// var colors = [\"#F95B34\", \"#EE3E64\", \"#F36283\", \"#FF9C34\", \"#EBDE52\", \"#B7D84B\", \"#44ACCF\"];\n// temporary pastel scheme\nvar colors = [\n  \"#fce9f1\",\n  \"#FEC8D8\",\n  \"#FFDFD3\",\n  \"#e9fcf4\",\n  \"#feece8\",\n  \"#e8fafe\",\n  \"#ece8fe\",\n  \"#efbbcf\",\n  \"#ffd5cd\",\n  \"#FFCCDD\",\n  \"#FFFFCC\",\n  \"#FFDDCC\",\n  \"#CCDDEE\",\n  \"#FFCCCC\",\n  \"#CCDDCC\",\n  \"#CCFFCC\",\n  \"#FFEEFF\",\n  \"#CCCCFF\",\n  \"#CAEEFE\",\n  \"#FFFCE7\",\n  \"E1FFD4\",\n  \"#FCE1F8\",\n  \"DACBFE\",\n];\n\nvar flyCircleData = [];\nfor (var i = 0; i < steps; i++) {\n  flyCircleData.push({\n    fixedAngle: (i / steps) * (2 * Math.PI),\n    randomAngle: (i / steps) * (2 * Math.PI),\n    speed: Math.random() * 7000 + 3000,\n    r: Math.floor(Math.random() * 50 + 15),\n    color: colors[i % colors.length],\n  });\n} //for i\n\n//Set up the circles\ncircleWrapper\n  .selectAll(\".flyCircle\")\n  .data(flyCircleData)\n  .enter()\n  .append(\"circle\")\n  .attr(\"class\", \"flyCircle\")\n  .style(\"fill\", function (d) {\n    return d.color;\n  })\n  .attr(\"cy\", 0)\n  .attr(\"cx\", 0)\n  .attr(\"r\", 0)\n  .call((enter) =>\n    enter\n      .transition()\n      .duration(1500)\n      .delay(function (d, i) {\n        return i * 500;\n      })\n  )\n  .attr(\"cy\", function (d) {\n    return xScale(Math.sin(d.fixedAngle));\n  })\n  .attr(\"cx\", function (d) {\n    return xScale(Math.cos(d.fixedAngle));\n  })\n  .attr(\"r\", function (d) {\n    return d.r;\n  })\n  .attr(\"transform\", function (d, i) {\n    var radius = spacing * Math.sqrt(i),\n      angle = i * theta;\n    return (\n      \"translate(\" +\n      radius * Math.cos(angle) +\n      \",\" +\n      radius * Math.sin(angle) +\n      \")\"\n    );\n  })\n  .on(\"end\", goRound);\n\n///////////////////////////////////////////////////////////////////////////\n/////////////////////////////// Functions /////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\n// eslint-disable-next-line no-unused-vars\nfunction collide(node) {\n  var r = node.radius + 16,\n    nx1 = node.x - r,\n    nx2 = node.x + r,\n    ny1 = node.y - r,\n    ny2 = node.y + r;\n  return function (quad, x1, y1, x2, y2) {\n    if (quad.point && quad.point !== node) {\n      var x = node.x - quad.point.x,\n        y = node.y - quad.point.y,\n        l = Math.sqrt(x * x + y * y),\n        r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = ((l - r) / l) * 0.5;\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n//Continuously moves the circles with different speeds\n// can't get this to work lol\nfunction goRound() {\n  select(\"svg\")\n    .selectAll(\"circle\")\n    .data(nodes)\n    // u.enter()\n    .transition()\n    .duration(4000)\n    .ease(easeLinear)\n    .attrTween(\"transform\", function () {\n      return interpolateString(\"rotate(0)\", \"rotate(360)\");\n    })\n    .on(\"end\", goRound);\n}\n\n// function repeat() {\n//  .transition()\n//  .duration(4000)\n//  .ease(easeCircle)\n//  .attr('cx',function(d) {\n//      return d.x + 2\n//    })\n//  .on(\"end\", repeat);\n// }\n\n// joins the nodes array to circle elements and updates their positions\nfunction update() {\n  // preparing for the join\n  var u = select(\"svg\").selectAll(\"circle\").data(nodes);\n  // .data(flyCircleData)\n  //selects all circles in nodes\n  u.enter()\n    //adds circle element to dom\n    .append(\"circle\")\n    // this creates the phylloaxis grid bc all the hidden circles now have a radius of 5\n    // there's 2 datasets here right now\n    // .attr('r', 5)\n    // merges selected data + new selected data\n    .merge(u)\n    .attr(\"cx\", function (d) {\n      return d.x;\n    })\n    .attr(\"cy\", function (d) {\n      return d.y;\n    });\n\n  u.exit().remove();\n  // goRound(u)\n}\n"],"sourceRoot":""}